# Generated by Django 5.2.1 on 2025-08-17 09:21


from django.db import migrations


def create_initial_campaigns(apps, schema_editor):
    """
    초기 캠페인 데이터 5개를 생성합니다.
    """
    Campaign = apps.get_model("campaigns", "Campaign")
    Campaign.objects.bulk_create(
        [
            # 1. Summer Sale
            Campaign(
                name="Summer Sale",
                status="active",
                channel="instagram",
                spend=5000,
                sales=25000,
                clicks=1200,
                impressions=50000,
                roas=500.00,
                start_date="2025-07-01",
                end_date="2025-07-31",
                objectives="Increase brand awareness",
                performance={
                    "total_spend": 5000,
                    "clicks": 1200,
                    "impressions": 50000,
                    "roas": 2.5,
                },
                # daily_performance=[{"date": "2025-07-01", "value": 800}, {"date": "2025-07-02", "value": 950}],
                creative={
                    "image_url": "https://cdn.example.com/images/campaign12.png",
                    "title": "Summer Sale",
                },
                target={"age_range": {"min": 28, "max": 45}},
                budget={"daily_limit": 9000},
            ),
            # 2. 신메뉴 런칭 이벤트
            Campaign(
                name="신메뉴 런칭 이벤트",
                status="active",
                channel="facebook",
                spend=12000,
                sales=174000,
                clicks=800,
                impressions=35000,
                roas=1450.00,
                start_date="2025-07-01",
                end_date="2025-07-31",
                objectives="신메뉴 인지도 증대 및 초기 판매 촉진",
                performance={
                    "total_spend": 12000,
                    "clicks": 800,
                    "impressions": 35000,
                    "roas": 145.6,
                },
                # daily_performance=[{"date": "2025-07-10", "value": 1000}, {"date": "2025-07-11", "value": 1200}],
                creative={
                    "image_url": "https://cdn.example.com/images/new_menu.png",
                    "title": "역대급 신메뉴 등장!",
                },
                target={"age_range": {"min": 20, "max": 40}},
                budget={"daily_limit": 15000},
            ),
            # 3. 점심 세트 프로모션
            Campaign(
                name="점심 세트 프로모션",
                status="active",
                channel="instagram",
                spend=25000,
                sales=820250,
                clicks=3000,
                impressions=80000,
                roas=3281.00,
                start_date="2025-08-01",
                end_date="2025-08-31",
                objectives="점심 시간대 매장 방문객 증대",
                performance={
                    "total_spend": 25000,
                    "clicks": 3000,
                    "impressions": 80000,
                    "roas": 328.1,
                },
                # daily_performance=[{"date": "2025-07-01", "value": 2000}, {"date": "2025-07-02", "value": 2500}],
                creative={
                    "image_url": "https://cdn.example.com/images/lunch_set.png",
                    "title": "든든한 점심 세트",
                },
                target={"age_range": {"min": 25, "max": 50}},
                budget={"daily_limit": 10000},
            ),
            # 4. 8월 여름 휴가 시즌 특가
            Campaign(
                name="8월 여름 휴가 시즌 특가",
                status="active",
                channel="facebook",
                spend=18000,
                sales=220000,
                clicks=1500,
                impressions=60000,
                roas=1222.22,
                start_date="2025-08-01",
                end_date="2025-08-31",
                objectives="휴가 시즌 타겟 매출 증대",
                performance={
                    "total_spend": 18000,
                    "clicks": 1500,
                    "impressions": 60000,
                    "roas": 1222.22,
                },
                # daily_performance=[{"date": "2025-08-25", "value": 3000}],
                creative={
                    "image_url": "https://cdn.example.com/images/august_sale.png",
                    "title": "썸머 바캉스 세일!",
                },
                target={"age_range": {"min": 30, "max": 55}},
                budget={"daily_limit": 20000},
            ),
            # 5. 6월 상반기 결산 세일
            Campaign(
                name="6월 상반기 결산 세일",
                status="ended",
                channel="instagram",
                spend=8000,
                sales=50000,
                clicks=900,
                impressions=25000,
                roas=625.00,
                start_date="2025-06-01",
                end_date="2025-06-30",
                objectives="상반기 매출 목표 달성",
                performance={
                    "total_spend": 8000,
                    "clicks": 900,
                    "impressions": 25000,
                    "roas": 625.00,
                },
                # daily_performance=[{"date": "2025-06-30", "value": 8000}],
                creative={
                    "image_url": "https://cdn.example.com/images/june_flash_sale.png",
                    "title": "상반기 총결산!",
                },
                target={"age_range": {"min": 20, "max": 35}},
                budget={"daily_limit": 8000},
            ),
        ]
    )


def remove_initial_campaigns(apps, schema_editor):
    """
    데이터 롤백 시 생성했던 캠페인들을 이름으로 찾아 삭제합니다.
    """
    Campaign = apps.get_model("campaigns", "Campaign")
    campaign_names = [
        "Summer Sale",
        "신메뉴 런칭 이벤트",
        "점심 세트 프로모션",
        "8월 여름 휴가 시즌 특가",
        "6월 상반기 결산 세일",
    ]
    Campaign.objects.filter(name__in=campaign_names).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("campaigns", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(
            create_initial_campaigns, reverse_code=remove_initial_campaigns
        ),
    ]
