# Generated by Django 5.2.1 on 2025-08-22 16:36

from django.contrib.auth.hashers import make_password
from django.db import migrations
from django.utils import timezone


def seed_users_and_notices(apps, schema_editor):
    # models 가져오기
    User = apps.get_model("auth", "User")
    UserProfile = apps.get_model("users", "UserProfile")
    UserNotificationSetting = apps.get_model("users", "UserNotificationSetting")
    Subscription = apps.get_model("users", "Subscription")
    PaymentMethod = apps.get_model("users", "PaymentMethod")
    BillingInvoice = apps.get_model("users", "BillingInvoice")
    Notice = apps.get_model("users", "Notice")

    # 1) 관리자(슈퍼유저) & 테스트 일반유저 시드 (idempotent: 반복 실행 안전)
    admin, _ = User.objects.get_or_create(
        username="admin",
        defaults={
            "email": "admin@example.com",
            "password": make_password("testpassword123"),
            "is_staff": True,
            "is_superuser": True,
        },
    )

    demo, _ = User.objects.get_or_create(
        username="demo",
        defaults={
            "email": "demo@example.com",
            "password": make_password("testpassword123"),
            "is_staff": False,
            "is_superuser": False,
        },
    )

    # 2) 프로필/알림설정 기본값
    for u, nick in [(admin, "관리자"), (demo, "데모유저")]:
        UserProfile.objects.get_or_create(
            user=u,
            defaults={"nickname": nick, "phone_number": "", "birthdate": None},
        )
        UserNotificationSetting.objects.get_or_create(user=u)

    # 3) 데모 유저 과금/결제 예시 (프론트에서 목록/히스토리 보여줄 때 필요하면)
    Subscription.objects.get_or_create(
        user=demo,
        defaults={
            "plan_name": "베이직 플랜",
            "monthly_price": 29900,
            "currency": "KRW",
            "next_payment_date": None,
        },
    )

    PaymentMethod.objects.get_or_create(
        user=demo,
        method_id="pm_demo_visa",
        defaults={"card_type": "VISA", "last4": "4242", "is_default": True},
    )

    BillingInvoice.objects.get_or_create(
        user=demo,
        invoice_id="inv_demo_001",
        defaults={
            "plan_name": "베이직 플랜",
            "amount": 29900,
            "currency": "KRW",
            "paid_at": timezone.now(),
        },
    )

    # 4) 공지사항 시드
    Notice.objects.get_or_create(
        public_id="ntc_welcome",
        defaults={
            "title": "환영합니다 👋",
            "body": "MoPT 데모 계정이 준비되었습니다.",
        },
    )
    Notice.objects.get_or_create(
        public_id="ntc_update_001",
        defaults={
            "title": "서비스 업데이트 안내",
            "body": "홈 대시보드 데이터가 갱신되었습니다.",
        },
    )


def unseed(apps, schema_editor):
    User = apps.get_model("auth", "User")
    Notice = apps.get_model("users", "Notice")
    # 되돌리기(선택): 데모용 데이터만 제거
    User.objects.filter(username__in=["admin", "demo"]).delete()
    Notice.objects.filter(public_id__in=["ntc_welcome", "ntc_update_001"]).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0014_userprofile_profile_image_url"),
    ]

    operations = [
        migrations.RunPython(seed_users_and_notices, reverse_code=unseed),
    ]
